name: Build and Analyze

on:
  push:
    branches: [ main ]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: List all files in the repository after checkout
        run: |
          ls -la

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=githubactions-1

      - name: List files in the root directory after build
        run: |
          ls -al

      - name: List files in the target directory
        run: |
          ls -al target

      # - name: Deploy to Tomcat on EC2
      #   env:
      #     PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      #     HOST: 54.89.24.4  # Replace with your EC2 instance IP
      #     USER: ubuntu  # Use 'root' since your public key is in /root/.ssh/authorized_keys
      #     ARTIFACT_PATH: target/spring-boot-mongo-1.0.jar  # Replace with your actual artifact name
      #   run: |
          # Create SSH key file
          # echo "$PRIVATE_KEY" > private_key.pem
          # chmod 600 private_key.pem

          # Copy the artifact to the EC2 instance
          #scp -o StrictHostKeyChecking=no -i private_key.pem $ARTIFACT_PATH $USER@$HOST:/opt/

          # Optionally restart Tomcat (assuming systemctl is used)
          # ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST 'sudo systemctl restart tomcat'
